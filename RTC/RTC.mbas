program RTC_Read

dim seconds, minutes, hours, day, month, year as byte    ' Global date/time variables
dim time as char[10]
dim date as char[10]


' Software I2C connections
dim Soft_I2C_Scl  as sbit at RC3_bit
    Soft_I2C_Sda  as sbit at RC4_bit
    Soft_I2C_Scl_Direction as sbit at TRISC3_bit
    Soft_I2C_Sda_Direction as sbit at TRISC4_bit
' End Software I2C connections

dim LCD_RS as sbit at RB4_bit
    LCD_EN as sbit at RB5_bit
    LCD_D4 as sbit at RB0_bit
    LCD_D5 as sbit at RB1_bit
    LCD_D6 as sbit at RB2_bit
    LCD_D7 as sbit at RB3_bit
    LCD_RS_Direction as sbit at TRISB4_bit
    LCD_EN_Direction as sbit at TRISB5_bit
    LCD_D4_Direction as sbit at TRISB0_bit
    LCD_D5_Direction as sbit at TRISB1_bit
    LCD_D6_Direction as sbit at TRISB2_bit
    LCD_D7_Direction as sbit at TRISB3_bit
' End Lcd module connections

sub function msb(dim x as char) as char ' Yet another function. Make sure that parameters match the type definition
    result = (x>>4)+$30 '$30 to add '0' at the end to display it correctly
end sub

sub function lsb(dim x as char) as char
    result = (x and 0x0f)+$30
end sub
sub function read_ds1307(dim adress as byte) as byte
    Soft_I2C_Start()              ' Issue start signal
    Soft_I2C_Write(0xd0)          ' Address ds1307
    Soft_I2C_Write(adress)             ' Start from address 2
    Soft_I2C_Start()              ' Issue repeated start signal
    Soft_I2C_Write(0xd1)          ' Address PCF8583 for reading R/W=1
    result = Soft_I2C_Read(0)
    Soft_I2C_Stop()               ' Issue stop signal}
end sub

'--------------------- Reads time and date information from RTC (PCF8583)
sub procedure Read_Time()
  seconds = read_ds1307(0)        'read second byte
  minutes = read_ds1307(1)        'read minute byte
  hours = read_ds1307(2)          'read hour byte
  day = read_ds1307(4)            'read day byte
  month = read_ds1307(5)          'read month byte
  year = read_ds1307(6)           'read year byte
  time[0] = msb(hours)
  time[1] = lsb(hours)
  time[3] = msb(minutes)
  time[4] = lsb(minutes)
  time[6] = msb(seconds)
  time[7] = lsb(seconds)
  date[0] = msb(day)
  date[1] = lsb(day)
  date[3] = msb(month)
  date[4] = lsb(month)
  date[6] = msb(year)
  date[7] = lsb(year)
  
end sub



'-------------------- Output values to Lcd
sub procedure Display_Time()
  lcd_out(2, 6, time)
  lcd_out(1, 6, date)
end sub

'------------------ Performs project-wide init
sub procedure Init_Main()
  time = "00:00:00"
  date = "00/00/00"
  TRISB = 0
  PORTB = 0xFF
  TRISB = 0xFF
  ADCON1 = 0xFF

  CMCON = 0xFF
  Soft_I2C_Init()           ' Initialize Soft I2C communication

  Lcd_Init()                ' Initialize Lcd
  Lcd_Cmd(_LCD_CLEAR)       ' Clear Lcd display
  Lcd_Cmd(_LCD_CURSOR_OFF)  ' Turn cursor off

  Lcd_Out(1,1,"Date:")      ' Prepare and output static text on Lcd

  Lcd_Out(2,1,"Time:")

end sub

'----------------- Main sub procedure
main:
  Delay_ms(500)

  Init_Main()             ' Perform initialization

  while TRUE              ' Endless loop
    Read_Time()           ' Read time from RTC(PCF8583)
    Display_Time()      ' Format date and time
    Delay_ms(100)
  wend
end.