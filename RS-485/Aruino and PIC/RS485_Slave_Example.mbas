program RS485_Slave_Example
dim receivedByte as byte              ' variable to store the received byte
dim dataReceived as boolean           ' flag to indicate if a full set of data has been received
dim dat as byte[20]              ' buffer for receving/sending messages
    i, j as byte

dim rs485_rxtx_pin as sbit at RC2_bit                ' set transcieve pin
    rs485_rxtx_pin_direction as sbit at TRISC2_bit   ' set transcieve pin direction

' Interrupt routine

sub procedure interrupt()
  RS485Slave_Receive(dat)
  if UART1_Data_Ready() then
    receivedByte = UART1_Read()  ' Read the byte from UART1
    dataReceived = TRUE          ' Set the flag to indicate data is received
  end if
end sub

main:
     UART1_Init(9600)                ' initialize UART1 module
     Delay_ms(100)
     RS485Slave_Init(160)           ' Initialize MCU as slave, address 160
     TRISB = 0x00                   ' Set PORTB as output
     dataReceived = TRUE
     receivedByte = 1
     RCIE_bit = 1                   ' enable interrupt on UART1 receive
     TXIE_bit = 0                   ' disable interrupt on UART1 transmit
     PEIE_bit = 1                   ' enable peripheral interrupts
     GIE_bit = 1                    ' enable all interrupts
     
     while (TRUE)
           if(dataReceived) then
               dataReceived = false   ' Reset the flag
               ' Process the received byte
               if(receivedByte = 1) then
                   PORTB.0 = 1
                   Delay_ms(1000)
               else
                   PORTB.0 = 0
                   Delay_ms(1000)
               end if
           end if


     wend
end.