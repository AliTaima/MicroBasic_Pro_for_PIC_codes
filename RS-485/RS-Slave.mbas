program RS_Slave

dim dat as byte[20]              ' buffer for receving/sending messages
    i, j as byte

dim adc_rd as word               ' ADC variable to store ADC data

dim rs485_rxtx_pin as sbit at RC2_bit                ' set transcieve pin
    rs485_rxtx_pin_direction as sbit at TRISC2_bit   ' set transcieve pin direction

' Interrupt routine
sub procedure interrupt()
  RS485Slave_Receive(dat)
end sub

' Declarations section 

main:
'   Main program
    UART1_Init(9600)              ' initialize UART1 module
    Delay_ms(100)
    RS485Slave_Init(160)          ' Initialize MCU as slave, address 160
    
    ADC_Init()                    ' Initialize ADC
    TRISA2_bit = 1                ' Make pin A2 as input

    RCIE_bit = 1                  ' enable interrupt on UART1 receive
    TXIE_bit = 0                  ' disable interrupt on UART1 transmit
    PEIE_bit = 1                  ' enable peripheral interrupts
    GIE_bit = 1                   ' enable all interrupts

    dat[0] = 0                    ' Make sure that initial value of dat[0] is zero

    while TRUE
         dat[0] = ADC_Read(2)     ' get ADC value from 2nd channel
         RS485Slave_Send(dat,1)   '   and send it back to master

    wend


end.